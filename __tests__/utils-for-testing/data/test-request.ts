import {KeyTypes} from 'actions/interfaces';
import {
  KeychainKeyTypes,
  KeychainRequestData,
  KeychainRequestTypes,
  RequestAddAccount,
  RequestAddAccountAuthority,
  RequestAddKeyAuthority,
  RequestBroadcast,
  RequestConvert,
  RequestCreateClaimedAccount,
  RequestCreateProposal,
  RequestCustomJSON,
  RequestDecode,
  RequestDelegation,
  RequestEncode,
  RequestError,
  RequestPost,
  RequestPowerDown,
  RequestPowerUp,
  RequestProxy,
  RequestRecurrentTransfer,
  RequestRemoveAccountAuthority,
  RequestRemoveKeyAuthority,
  RequestRemoveProposal,
  RequestSendToken,
  RequestSignBuffer,
  RequestSignedCall,
  RequestSignTx,
  RequestSuccess,
  RequestTransfer,
  RequestUpdateProposalVote,
  RequestVote,
  RequestWitnessVote,
} from 'utils/keychain.types';
import testAccount from './test-account';
import testCommentOptions from './test-comment-options';
import testHiveTxTransaction from './test-hive-tx-transaction';

export default {
  addAccount: {
    type: KeychainRequestTypes.addAccount,
    username: testAccount._default.name,
    keys: {},
  } as RequestAddAccount,
  post: {
    type: KeychainRequestTypes.post,
    username: testAccount._default.name,
    title: 'Amazing Post',
    body: 'body post',
    parent_perm: 'https://hive.blog/@theghost1980/amazing-post',
    parent_username: testAccount._default.name,
    json_metadata: JSON.stringify({meta: 'data'}),
    permlink: 'https://hive.blog/@theghost1980/amazing-post',
    comment_options: JSON.stringify(testCommentOptions._default),
  } as RequestPost,
  addaccountAuth: {
    type: KeychainRequestTypes.addAccountAuthority,
    authorizedUsername: 'quentin',
    role: KeychainKeyTypes.active,
    weight: 0,
    username: testAccount._default.name,
    method: KeychainKeyTypes.active,
  } as RequestAddAccountAuthority,
  removeAccountAuth: {
    type: KeychainRequestTypes.removeAccountAuthority,
    username: testAccount._default.name,
    authorizedUsername: 'quentin',
    role: KeychainKeyTypes.active,
    method: KeychainKeyTypes.active,
  } as RequestRemoveAccountAuthority,
  addKeyAuthority: {
    type: KeychainRequestTypes.addKeyAuthority,
    username: testAccount._default.name,
    authorizedKey: testAccount._default.keys.activePubkey,
    role: KeychainKeyTypes.active,
    weight: 1,
    method: KeychainKeyTypes.active,
  } as RequestAddKeyAuthority,
  removeKeyAuthority: {
    type: KeychainRequestTypes.removeKeyAuthority,
    username: testAccount._default.name,
    authorizedKey: testAccount._default.keys.activePubkey,
    role: KeychainKeyTypes.active,
    method: KeychainKeyTypes.active,
  } as RequestRemoveKeyAuthority,
  witnessVote: {
    type: KeychainRequestTypes.witnessVote,
    witness: 'keychain',
    vote: true,
  } as RequestWitnessVote,
  error: (requestData: KeychainRequestData): RequestError => {
    return {
      data: requestData,
      request_id: 10001,
      error: 'error',
      message: 'error_message',
    };
  },
  success: (requestData: KeychainRequestData): RequestSuccess => {
    return {
      data: requestData,
      request_id: 10002,
      result: 'success',
      message: 'success_message',
    };
  },
  decode: {
    type: KeychainRequestTypes.decode,
    username: testAccount._default.name,
    message: 'message',
    method: KeychainKeyTypes.memo,
  } as RequestDecode,
  encode: {
    type: KeychainRequestTypes.encode,
    username: testAccount._default.name,
    receiver: 'theghost1980',
    message: 'message',
    method: KeychainKeyTypes.memo,
  } as RequestEncode,
  signBuffer: {
    type: KeychainRequestTypes.signBuffer,
    username: testAccount._default.name,
    message: 'message',
    method: KeychainKeyTypes.memo,
    title: 'title',
  } as RequestSignBuffer,
  vote: {
    type: KeychainRequestTypes.vote,
    username: testAccount._default.name,
    permlink: 'https://hiveblog/@theghost1980/js/',
    author: 'theghost1980',
    weight: 100,
  } as RequestVote,
  broadcast: {
    type: KeychainRequestTypes.broadcast,
    username: testAccount._default.name,
    operations: [],
    method: KeychainKeyTypes.active,
  } as RequestBroadcast,
  signTx: {
    type: KeychainRequestTypes.signTx,
    username: testAccount._default.name,
    tx: testHiveTxTransaction._default,
    method: KeychainKeyTypes.active,
  } as RequestSignTx,
  custom: {
    type: KeychainRequestTypes.custom,
    username: testAccount._default.name,
    id: '10003',
    method: KeychainKeyTypes.posting,
    json: JSON.stringify({json: 'json'}),
    display_msg: 'display_msg',
    domain: 'domain',
  } as RequestCustomJSON,
  transfer: {
    type: KeychainRequestTypes.transfer,
    username: testAccount._default.name,
    to: 'theghost1980',
    amount: '10000 HIVE',
    memo: 'memo',
    enforce: true,
    currency: 'HIVE',
  } as RequestTransfer,
  sendToken: {
    type: KeychainRequestTypes.sendToken,
    username: testAccount._default.name,
    to: 'theghost1980',
    amount: '1000',
    memo: 'memo',
    currency: 'KEYCHAIN',
    domain: 'domain',
  } as RequestSendToken,
  delegation: {
    type: KeychainRequestTypes.delegation,
    username: testAccount._default.name,
    delegatee: 'theghost1980',
    amount: '10000 VESTS',
    unit: 'VESTS',
  } as RequestDelegation,
  proxy: {
    type: KeychainRequestTypes.proxy,
    username: testAccount._default.name,
    proxy: 'keychain',
  } as RequestProxy,
  powerUp: {
    type: KeychainRequestTypes.powerUp,
    username: testAccount._default.name,
    recipient: 'theghost1980',
    steem: '10000 HIVE',
  } as RequestPowerUp,
  powerDown: {
    type: KeychainRequestTypes.powerDown,
    username: testAccount._default.name,
    steem_power: '10000 HIVE',
  } as RequestPowerDown,
  createClaimedAccount: {
    type: KeychainRequestTypes.createClaimedAccount,
    username: testAccount._default.name,
    new_account: 'newAccount',
    owner: 'theghost1980',
    active: testAccount._default.keys.active,
    posting: testAccount._default.keys.posting,
    memo: testAccount._default.keys.memo,
  } as RequestCreateClaimedAccount,
  createProposal: {
    type: KeychainRequestTypes.createProposal,
    username: testAccount._default.name,
    receiver: 'theghost1980',
    subject: 'Dev roadmap for Keychain Token',
    permlink: 'https://hive.blog/@theghost1980/keychain-token',
    start: '06-05-2023',
    end: '06-05-2024',
    daily_pay: '500 HBD',
    extensions: '',
  } as RequestCreateProposal,
  removeProposal: {
    type: KeychainRequestTypes.removeProposal,
    username: testAccount._default.name,
    proposal_ids: '999',
    extensions: '',
  } as RequestRemoveProposal,
  updateProposalVote: {
    type: KeychainRequestTypes.updateProposalVote,
    username: testAccount._default.name,
    proposal_ids: '999',
    approve: true,
    extensions: [],
  } as RequestUpdateProposalVote,
  convert: {
    type: KeychainRequestTypes.convert,
    username: testAccount._default.name,
    amount: '100000 HIVE',
    collaterized: false,
  } as RequestConvert,
  recurrentTransfer: {
    type: KeychainRequestTypes.recurrentTransfer,
    username: testAccount._default.name,
    to: 'theghost1980',
    amount: '3000',
    currency: 'HBD',
    memo: 'memo',
    recurrence: 1,
    executions: 1,
  } as RequestRecurrentTransfer,
  signedCall: {
    type: KeychainRequestTypes.signedCall,
    username: testAccount._default.name,
    method: 'posting',
    params: 'params',
    typeWif: KeyTypes.active,
  } as RequestSignedCall,
};
